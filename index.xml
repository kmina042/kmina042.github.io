<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mina Kim</title>
    <link>/</link>
    <description>Recent content on Mina Kim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 09 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R and Python</title>
      <link>/post/2021/05/09/r-and-python/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/09/r-and-python/</guid>
      <description>Two very important languages!
 When it comes to coding, there’s 2 major languages we need to know: R and python. But knowing one doesn’t mean we can just ignore the other–it’s best if we can interact with the two at once. This can be done through the reticulate package. Here we have two code chunk for each language.
R:
names(knitr::knit_engines$get()) ## [1] &amp;quot;awk&amp;quot; &amp;quot;bash&amp;quot; &amp;quot;coffee&amp;quot; &amp;quot;gawk&amp;quot; &amp;quot;groovy&amp;quot; ## [6] &amp;quot;haskell&amp;quot; &amp;quot;lein&amp;quot; &amp;quot;mysql&amp;quot; &amp;quot;node&amp;quot; &amp;quot;octave&amp;quot; ## [11] &amp;quot;perl&amp;quot; &amp;quot;psql&amp;quot; &amp;quot;Rscript&amp;quot; &amp;quot;ruby&amp;quot; &amp;quot;sas&amp;quot; ## [16] &amp;quot;scala&amp;quot; &amp;quot;sed&amp;quot; &amp;quot;sh&amp;quot; &amp;quot;stata&amp;quot; &amp;quot;zsh&amp;quot; ## [21] &amp;quot;highlight&amp;quot; &amp;quot;Rcpp&amp;quot; &amp;quot;tikz&amp;quot; &amp;quot;dot&amp;quot; &amp;quot;c&amp;quot; ## [26] &amp;quot;cc&amp;quot; &amp;quot;fortran&amp;quot; &amp;quot;fortran95&amp;quot; &amp;quot;asy&amp;quot; &amp;quot;cat&amp;quot; ## [31] &amp;quot;asis&amp;quot; &amp;quot;stan&amp;quot; &amp;quot;block&amp;quot; &amp;quot;block2&amp;quot; &amp;quot;js&amp;quot; ## [36] &amp;quot;css&amp;quot; &amp;quot;sql&amp;quot; &amp;quot;go&amp;quot; &amp;quot;python&amp;quot; &amp;quot;julia&amp;quot; ## [41] &amp;quot;sass&amp;quot; &amp;quot;scss&amp;quot; &amp;quot;theorem&amp;quot; &amp;quot;lemma&amp;quot; &amp;quot;corollary&amp;quot; ## [46] &amp;quot;proposition&amp;quot; &amp;quot;conjecture&amp;quot; &amp;quot;definition&amp;quot; &amp;quot;example&amp;quot; &amp;quot;exercise&amp;quot; ## [51] &amp;quot;proof&amp;quot; &amp;quot;remark&amp;quot; &amp;quot;solution&amp;quot; And now python!</description>
    </item>
    
    <item>
      <title>Project 1: Exploratory Data Analysis</title>
      <link>/project/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project1/</guid>
      <description>Data Wrangling and Data Exploration This project analyzes two data sets, one from fivethirtyeight and the other from the Medicare division of the federal government. The fivethirtyeight dataset “hate_crimes”, dated 2016, contains information on state population proportionality with respect to 2016 presidential voting, poverty, and more, along with the income inequality index(gini_index) and hate crimes per state. The medicaid dataset “medicaid_data”, dated 2016, contains information on state-wise health expenditures across various categories like overtime pay, clinic staffing, and the state (State.</description>
    </item>
    
    <item>
      <title>Project 2: Modeling, Testing, and Predicting</title>
      <link>/project/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project2/</guid>
      <description>Mina Kim MLK2589  Modeling, Testing, and Predicting This project analyzes the “Stroke prediction dataset” provided by data scientist Federico Soriano. The dataset compiles 10 clinical features that may be associated with stroke for 5110 anonymized patients. As stroke is the 2nd leading cause of death worldwide and accounts for about 11% of deaths, analyzing this dataset for any possible associations could help improve clinical outcomes for this medical emergency.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description> Check out some of my coding projects below:
 Wrangling &amp;amp; Exploratory Data Analysis
 Modeling, Inference, Prediction
  -- </description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description>    </description>
    </item>
    
  </channel>
</rss>
